version: 2.1
orbs:
  cypress: cypress-io/cypress@3.1.3

jobs:
  create-dummy-artifacts:
    docker:
      - image: circleci/node:14
    steps:
      - checkout
      - run: 
          name: Creating Dummy Artifacts
          command: |
            echo "my artifact file" > ~/project/art-1
            mkdir -p ~/project/artifacts
            echo "my artifact files in a dir" > ~/project/artifacts/art-2
      - persist_to_workspace:
          root: ~/project
          paths:
            - artifacts/

  run-cypress-tests:
    docker:
      - image: circleci/node:14
    steps:
      - checkout
      - restore_cache:
          keys:
            - cypress-cache-{{ checksum "package.json" }}
      - run:
          name: Installing Dependencies
          command: npm install
      - save_cache:
          paths:
            - ~/.cache/Cypress
          key: cypress-cache-{{ checksum "package.json" }}
      - run:
          name: Running Cypress Tests
          command: npm run test:cypress-parallel
      - persist_to_workspace:
          root: ~/project
          paths:
            - artifacts/

workflows:
  version: 2
  example-workflow:
    jobs:
      - create-dummy-artifacts
      - run-cypress-tests:
          requires:
            - create-dummy-artifacts


# version: 2.1
# orbs:
#   cypress: cypress-io/cypress@3.1.3
# workflows:
#   example-workflow:
#     jobs:
#       - cypress/run:
#           include-branch-in-node-cache-key: false 
#           install-browsers: true 
#           package-manager: npm 
#           cypress-cache-key: custom-cypress-cache-v1-{{ arch }}-{{ checksum "package.json" }} 
#           cypress-cache-path: ~/.cache/custom-dir/Cypress 
#           cypress-command: npm run test:cypress-parallel 
#           parallelism: 5 
#           : 
#               name: aritfacts directory
#               command: |
#                 echo "my artifact file" > ~/project/art-1;
#                 mkdir -p /home/circleci/project/artifacts;
#                 echo "my artifact files in a dir" > ~/project/artifacts/art-2;
#           persist_to_workspace:
#             root: /home/circleci/project
#             paths:
#               - artifacts/


                  


# version: 2
# jobs:
#     build:
#       docker:
#         - image: cimg/base:stable
#       working_directory: ~/project
#       steps:
#         - run:
#             name: Creating Dummy Artifacts
#             command: |
#               echo "my artifact file" > ~/project/art-1;
#               mkdir ~/project/artifacts;
#               echo "my artifact files in a dir" > ~/project/artifacts/art-2;
#         - store_artifacts:
#             path: ~/project/artifacts



# =====================================
# version: 2.1
# orbs:
#   cypress: cypress-io/cypress@3.1.3
# jobs:
  # job1:
  #   docker:
  #     # replace with your preferred image
  #     - image: cimg/base:stable
  #   steps:
  #     - cypress/install:
  #         install-command: npm install 
  #         install-browsers: true 
  #         working-directory: ~/project
  #     - cypress/run-tests:
  #         cypress-command: test:smoke-desktop-login-suite 
  # ===============================
# version: 2.1
# orbs:
#   cypress: cypress-io/cypress@3
# executors:
#   with-chrome:
#     resource_class: small
#     docker:
#       - image: 'cypress/browsers:node14.16.0-chrome90-ff88'
# workflows:
#   build:
#     jobs:
#       - cypress/install
#       - cypress/run:
#           requires:
#             - cypress/install
#           executor: with-chrome
#           browser: chrome
#           post-steps:
#             - run: ls
#             - store_test_results:
#                 path: cypress/results
#             - store_artifacts:
#                 path: cypress/screenshots
# =======================================================================================

# version: 2.1
# orbs:
#   cypress: cypress-io/cypress@3.1.3
# workflows:
#   obenan-workflow:
#     jobs:
#       - cypress/run:
#           include-branch-in-node-cache-key: false 
#           install-browsers: true 
#           package-manager: npm 
#           cypress-cache-key: custom-cypress-cache-v1-{{ arch }}-{{ checksum "package.json" }} 
#           cypress-cache-path: ~/.cache/custom-dir/Cypress 
#           cypress-command: npm run test:cypress-parallel 
#           parallelism: 5 
#           working-directory: ~/project
#           post-steps:
#             - run:
#                 name: Creating Dummy Artifacts
#                 command: |
#                   echo "my artifact file" > /tmp/artifact-1;
#                   mkdir /tmp/artifacts;
#                   echo "my artifact files in a dir" > /tmp/artifacts/artifact-2;

#             - persist_to_workspace:
#                         root: /tmp
#                         paths:
#                           - artifact-1
#                           - artifacts



# version: 2.1
# orbs:
#   cypress: cypress-io/cypress@3.1.3
# workflows:
#     example-workflow:
#       jobs:
#         - cypress/run:
#             include-branch-in-node-cache-key: false 
#             install-browsers: true 
#             package-manager: npm 
#             cypress-cache-key: custom-cypress-cache-v1-{{ arch }}-{{ checksum "package.json" }} 
#             cypress-cache-path: ~/.cache/custom-dir/Cypress 
#             cypress-command: npm run test:cypress-parallel 
#             parallelism: 5 
#             working-directory: ~/project

# version: 2.1
# jobs:
#   build:
#     docker:
#       - image: cypress/browsers:node-18.16.0-chrome-114.0.5735.133-1-ff-114.0.2-edge-114.0.1823.51-1 
#     parallelism: 8
#     working_directory: ~/project
#     steps:
#       - checkout
#       # - restore_cache: 
#       #       key: node_modules
#       - run: node --version
#       - run: npm cache clean --force
#       - run: npm install
#       - run: npx cypress --version
#       - run: 
#           name: Prepare Package Files
#           command: |
#             TARGET_DIR="/tmp"
#             if [ -n "$HOMEDRIVE" ]; then
#               TARGET_DIR="$HOMEDRIVE\\tmp"
#             fi

#             if [ -f "package-lock.json" ]; then
#               echo "Found package-lock.json file, assuming lockfile"
#               cp package-lock.json $TARGET_DIR/node-project-lockfile
#             elif [ -f "npm-shrinkwrap.json" ]; then
#               echo "Found npm-shrinkwrap.json file, assuming lockfile"
#               cp npm-shrinkwrap.json $TARGET_DIR/node-project-lockfile
#             elif [ -f "yarn.lock" ]; then
#               echo "Found yarn.lock file, assuming lockfile"
#               cp yarn.lock $TARGET_DIR/node-project-lockfile
#             fi

#             cp package.json $TARGET_DIR/node-project-package.json
#       - save_cache:
#           paths:
#             - npm-cache-{{ .Branch }}-{{ checksum "package.json" }}
#           key: 
#             node_modules
#       - run: npx cypress run --browser chrome --spec 'cypress/e2e/smoke/desktop/login_page/login-page-suite.cy.js'
# workflows:
#   version: 2.1 
#   build-and-run:
#     jobs:
#       - build

