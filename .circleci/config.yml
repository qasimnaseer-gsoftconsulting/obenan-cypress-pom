# This code is licensed from CircleCI to the user under the MIT license.
# See here for details: https://circleci.com/developer/orbs/licensing
version: 2.1
description: |
    Run your Cypress.io end-to-end & component tests without spending time configuring CircleCI
display:
    home_url: https://cypress.io
    source_url: https://github.com/cypress-io/circleci-orb
orbs:
    browser-tools: circleci/browser-tools@1.4.2
    node: circleci/node@5
commands:
    install:
        description: |
            Installs your application's node modules and cypress dependencies
        parameters:
            cypress-cache-key:
                default: cypress-cache-{{ arch }}-{{ checksum "package.json" }}
                description: Cache key used to cache the Cypress binary.
                type: string
            cypress-cache-path:
                default: ~/.cache/Cypress
                description: |
                    By default, this will cache the '~/.cache/Cypress' directory so that the Cypress binary is cached. You can override this by providing your own cache path.
                type: string
            include-branch-in-node-cache-key:
                default: false
                description: |
                    If true, this cache will only apply to runs within the same branch. (Adds -{{ .Branch }}- to the node cache key)
                type: boolean
            install-browsers:
                default: false
                description: |
                    Cypress runs by default in the Electron browser. Use this flag to install additional browsers to run your tests in.
                    This is only needed if you are passing the `--browser` flag in your `cypress-command`.
                    This parameter leverages the `circleci/browser-tools` orb and includes Chrome and FireFox.
                    If you need additional browser support you can set this to false and use an executor with a docker image
                    that includes the browsers of your choosing. See https://hub.docker.com/r/cypress/browsers/tags
                type: boolean
            install-command:
                default: ""
                description: Overrides the default NPM command (npm ci)
                type: string
            node-cache-version:
                default: v1
                description: Change the default node cache version if you need to clear the cache for any reason.
                type: string
            package-manager:
                default: npm
                description: Select the default node package manager to use. NPM v5+ Required.
                enum:
                    - npm
                    - yarn
                    - yarn-berry
                type: enum
            post-install:
                default: ""
                description: |
                    Additional commands to run after running install but before verifying Cypress and saving cache.
                type: string
            working-directory:
                default: "/cypress"
                description: Directory containing package.json
                type: string
        steps:
            - checkout
            - when:
                condition: << parameters.install-browsers >>
                steps:
                    - browser-tools/install-browser-tools
            - restore_cache:
                key: << parameters.cypress-cache-key >>
                name: Restore Cypress cache
            - node/install-packages:
                app-dir: << parameters.working-directory >>
                cache-version: << parameters.node-cache-version >>
                include-branch-in-cache-key: << parameters.include-branch-in-node-cache-key >>
                override-ci-command: << parameters.install-command >>
                pkg-manager: << parameters.package-manager >>
            - when:
                condition: << parameters.post-install >>
                steps:
                    - run:
                        command: << parameters.post-install >>
                        name: Post Install Script
                        working_directory: << parameters.working-directory >>
            - run:
                command: npx cypress verify
                name: Verify Cypress
                working_directory: << parameters.working-directory >>
            - save_cache:
                key: << parameters.cypress-cache-key >>
                name: Save Cypress Binary
                paths:
                    - << parameters.cypress-cache-path >>
    run-tests:
        description: |
            A single, complete job to run Cypress tests
        parameters:
            cypress-command:
                default: npx cypress run
                description: Command used to run your Cypress tests
                type: string
            start-command:
                default: ""
                description: Command used to start your local dev server for Cypress to tests against
                type: string
            working-directory:
                default: .
                description: Directory containing package.json
                type: string
        steps:
            - when:
                condition: << parameters.start-command >>
                steps:
                    - run:
                        background: true
                        command: << parameters.start-command >>
                        name: Start Server
                        working_directory: << parameters.working-directory >>
            - run:
                command: << parameters.cypress-command >>
                name: Run Cypress
                working_directory: << parameters.working-directory >>
            - store_artifacts:
                path: << parameters.working-directory >>/cypress/videos
            - store_artifacts:
                path: << parameters.working-directory >>/cypress/screenshots
